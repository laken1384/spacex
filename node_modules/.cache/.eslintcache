[{"/Users/laken/文件/面試/MTK_contractor/test/spacex/src/index.js":"1","/Users/laken/文件/面試/MTK_contractor/test/spacex/src/reportWebVitals.js":"2","/Users/laken/文件/面試/MTK_contractor/test/spacex/src/App.js":"3"},{"size":535,"mtime":1684819793123,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1684819793123,"results":"6","hashOfConfig":"5"},{"size":3953,"mtime":1684819793122,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cdvlvr",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"/Users/laken/文件/面試/MTK_contractor/test/spacex/src/index.js",[],[],"/Users/laken/文件/面試/MTK_contractor/test/spacex/src/reportWebVitals.js",[],[],"/Users/laken/文件/面試/MTK_contractor/test/spacex/src/App.js",["18"],[],"import \"./App.css\";\nimport fakeData from \"./MOCK_DATA.json\";\nimport * as React from \"react\";\nimport { useTable, useSortBy, useGlobalFilter, usePagination } from \"react-table\";\nfunction App() {\n  const [sorting, setSorting] = React.useState([]);\n  const data = React.useMemo(() => {\n    if (sorting.length > 0) {return sorting;}\n    return fakeData;\n  }, [sorting]);\n  const [pages, setPages] = React.useState(0);\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Mission Name\",\n        accessor: \"mission_name\"\n      },\n      {\n        Header: \"Rocket Name\",\n        accessor: \"rocket_name\"\n      },\n      {\n        Header: \"Rocket Type\",\n        accessor: \"rocket_type\"\n      },\n      {\n        Header: \"Launch Date\",\n        accessor: \"launch_date\"\n      },\n    ],\n    []\n  );\n  React.useEffect(()=> {\n    fetch('https://api.spacexdata.com/v2/launches')\n    .then(response => response.json())\n    .then(cells => {\n      let cell = cells.map((e) => {\n        const date = new Date(e.launch_date_local);\n        const year = date.getFullYear();\n        const month = `${(date.getMonth() + 1)}`.padStart(2, '0');\n        const day = `${date.getDate()}`.padStart(2, '0');\n        const dateString = `${year}/${month}/${day}`;\n\n        return {\n        \"mission_name\": e.mission_name,\n        \"rocket_name\": e.rocket.rocket_name,\n        \"rocket_type\": e.rocket.rocket_type,\n        \"launch_date\": dateString\n        }});\n      setSorting(cell);\n    })\n    .catch(error => console.error(error));\n  }, [])\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n\n    setGlobalFilter,\n    state: { globalFilter },\n\n    canPreviousPage,\n    canNextPage,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex },\n  } = useTable(\n    { columns, data },\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n  )\n  ///\n  React.useEffect(()=> {\n    setPageSize(20);\n    setPages(pageIndex);\n  }, [pageIndex])\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        {/* <Pagination table={table} /> */}\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>{' '}\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>{' '}\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>{' '}\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>{' '}\n        <span>\n          Page{' '}\n          <strong>{pageIndex + 1} of {pageCount}</strong>{' '}\n        </span>\n        <input\n          value={globalFilter || ''}\n          onChange={(e) => setGlobalFilter(e.target.value)}\n          placeholder=\"Search...\"\n        />\n        <table {...getTableProps()}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render('Header')}\n                  {column.isSorted\n                    ? column.isSortedDesc\n                      ? ' 🔽'\n                      : ' 🔼'\n                    : ''}\n                </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.slice(pages * 20, pages * 20 + 20).map((row) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => (\n                    <td {...cell.getCellProps()}> {cell.render(\"Cell\")} </td>\n                  ))}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"19","severity":1,"message":"20","line":83,"column":6,"nodeType":"21","endLine":83,"endColumn":17,"suggestions":"22"},"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'setPageSize'. Either include it or remove the dependency array.","ArrayExpression",["23"],{"desc":"24","fix":"25"},"Update the dependencies array to be: [pageIndex, setPageSize]",{"range":"26","text":"27"},[1993,2004],"[pageIndex, setPageSize]"]